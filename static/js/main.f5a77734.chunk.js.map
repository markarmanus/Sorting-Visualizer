{"version":3,"sources":["Components/Bar.js","Contstants/Colors.js","Components/Visualizer.js","HelperFunctions.js","SearchAlgorthims.js","Contstants/Conf.js","Components/NavBar.js","Components/Footer.js","Components/App.js","serviceWorker.js","index.js"],"names":["Bar","nextProps","height","this","props","color","newStart","style","width","backgroundColor","marginRight","display","React","Component","COLORS","Main","styled","div","Visualizer","state","multiplexor","barWidth","index","done","inFinalPosition","includes","switching","pivot","comparing","alternative","values","map","value","getColor","key","maxSoFar","forEach","Math","max","length","calculateNormalizer","generateArray","Array","from","random","waitFor","time","a","Promise","resolve","setTimeout","BuubleSort","component","tempCopy","x","i","setState","speed","temp","push","SelectionSort","smallestSoFarAt","InsertionSort","CONF","DEFAULT_START_SIZE","DEFAULT_SPEED","BREAK_POINT_FULL_HD_SCREEN","BREAK_POINT_SMALL_SCREEN","MAX_ARRAY_SIZE","MIN_ARRAY_SIZE","MAX_SPEED","MIN_SPEED","DEFAULT_ALGORTHIM","Container","CenterFlexBox","StyledButton","Button","Left","Center","Right","StyledSlider","Slider","Label","Typography","Text","Title","StyledSelector","Select","SliderContainer","NavBar","onClick","onClickSort","type","onClickResetart","tooltipPlacement","defaultValue","onAfterChange","onChangeSize","min","onChangeSpeed","tipFormatter","tool","disabled","inProgress","onChange","onSelectAlgorthim","Option","onClickNewArray","CenterContainer","StyledText","Footer","href","target","shape","ghost","icon","PageContainer","App","originalValues","slice","size","doneSotring","selectedAlgorthim","startSearch","bind","resetValues","setValuesTo","algorthim","newArray","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5a77734.chunk.js","sourcesContent":["import React from \"react\"\n\nconst marginPercentage = 0.1\n\nexport default class Bar extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return (\n      nextProps.height !== this.props.height ||\n      nextProps.color !== this.props.color ||\n      nextProps.newStart\n    )\n  }\n\n  render() {\n    return (\n      <div\n        //Using in line styling to avoid creating Multiple css classes.\n        style={{\n          width: `${this.props.width * (1 - marginPercentage)}%`,\n          backgroundColor: `${this.props.color}`,\n          marginRight: `${this.props.width * marginPercentage}%`,\n          height: `${this.props.height}%`,\n          display: \"inline-block\"\n        }}\n        color={this.props.color}\n        width={this.props.width}\n        height={this.props.height}\n      ></div>\n    )\n  }\n}\n","export const COLORS = {\n  ALTERNATIVE: \"#F0A202\",\n  COMPARING: \"#005E2C\",\n  SWITCHING: \"#5E0035\",\n  IN_POSITION: \"#3E4368\",\n  PIVOT: \"#023C40\",\n  NONE: \"#000501\"\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Bar from \"./Bar.js\"\nimport { COLORS } from \"../Contstants/Colors\"\n\nconst Main = styled.div`\n  display: flex;\n  height: 50%;\n  width: 60%;\n  margin: auto;\n`\n\nexport default class Visualizer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      multiplexor: 0,\n      barWidth: 0\n    }\n  }\n\n  static calculateNormalizer(values) {\n    let maxSoFar = 0\n    values.forEach(value => {\n      maxSoFar = value > maxSoFar ? value : maxSoFar\n    })\n    return 100 / maxSoFar\n  }\n\n  getColor(index) {\n    return this.props.done || this.props.inFinalPosition.includes(index)\n      ? COLORS.IN_POSITION\n      : this.props.switching.includes(index)\n      ? COLORS.SWITCHING\n      : this.props.pivot.includes(index)\n      ? COLORS.PIVOT\n      : this.props.comparing.includes(index)\n      ? COLORS.COMPARING\n      : this.props.alternative.includes(index)\n      ? COLORS.ALTERNATIVE\n      : COLORS.NONE\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.newStart) {\n      return {\n        barWidth: Math.max(100 / props.values.length, 0.001),\n        multiplexor: Visualizer.calculateNormalizer(props.values)\n      }\n    }\n    return null\n  }\n\n  render() {\n    return (\n      <Main>\n        {this.props.values.map((value, index) => (\n          <Bar\n            color={this.getColor(index)}\n            key={index}\n            width={this.state.barWidth}\n            height={value * this.state.multiplexor}\n            newStart={this.props.newStart}\n          ></Bar>\n        ))}\n      </Main>\n    )\n  }\n}\n","export function generateArray(length) {\n  return Array.from({ length: length }, () =>\n    Math.max(Math.random() * 100, 0.5)\n  )\n}\n\nexport async function waitFor(time) {\n  await new Promise(resolve => setTimeout(resolve, time))\n}\n","import { waitFor } from \"./HelperFunctions\"\n\nexport async function BuubleSort(component) {\n  let tempCopy = component.state.values\n  for (let x = component.state.values.length - 1; x > 0; x--) {\n    for (let i = 0; i < x; i++) {\n      if (component.state.newStart) return\n      component.setState({\n        comparing: [i, i + 1]\n      })\n      await waitFor(component.state.speed)\n      if (tempCopy[i] > tempCopy[i + 1]) {\n        component.setState({\n          switching: [i, i + 1]\n        })\n        await waitFor(component.state.speed)\n        let temp = tempCopy[i]\n        tempCopy[i] = tempCopy[i + 1]\n        tempCopy[i + 1] = temp\n        component.setState({\n          values: tempCopy\n        })\n        await waitFor(component.state.speed)\n        component.setState({\n          switching: []\n        })\n        await waitFor(component.state.speed)\n      }\n    }\n    let temp = component.state.inFinalPosition\n    temp.push(x)\n    component.setState({\n      inFinalPosition: temp\n    })\n    await waitFor(component.state.speed)\n  }\n}\n\nexport async function SelectionSort(component) {\n  let tempCopy = component.state.values\n  for (let x = 0; x < tempCopy.length; x++) {\n    let smallestSoFarAt = x\n\n    component.setState({ pivot: [x] })\n    await waitFor(component.state.speed)\n\n    for (let i = x + 1; i < tempCopy.length; i++) {\n      if (component.state.newStart) return\n      component.setState({ comparing: [i] })\n      await waitFor(component.state.speed)\n\n      if (tempCopy[i] < tempCopy[smallestSoFarAt]) {\n        component.setState({ pivot: [i] })\n        await waitFor(component.state.speed)\n        smallestSoFarAt = i\n      }\n    }\n    if (smallestSoFarAt !== x) {\n      component.setState({\n        switching: [smallestSoFarAt, x]\n      })\n      await waitFor(component.state.speed)\n      let temp = tempCopy[x]\n      tempCopy[x] = tempCopy[smallestSoFarAt]\n      tempCopy[smallestSoFarAt] = temp\n      component.setState({ values: tempCopy })\n      await waitFor(component.state.speed)\n    }\n\n    let temp = component.state.inFinalPosition\n    temp.push(x)\n    component.setState({ switching: [], inFinalPosition: temp })\n  }\n}\n\nexport async function InsertionSort(component) {\n  let tempCopy = component.state.values\n  for (let x = 0; x < tempCopy.length; x++) {\n    for (let i = x + 1; i > 0; i--) {\n      if (component.state.newStart) return\n\n      component.setState({ comparing: [i, i - 1] })\n      await waitFor(component.state.speed)\n      if (tempCopy[i] < tempCopy[i - 1]) {\n        component.setState({ switching: [i, i - 1] })\n        await waitFor(component.state.speed)\n        let temp = tempCopy[i]\n        tempCopy[i] = tempCopy[i - 1]\n        tempCopy[i - 1] = temp\n        component.setState({ values: tempCopy })\n        await waitFor(component.state.speed)\n        component.setState({ switching: [] })\n        await waitFor(component.state.speed)\n      }\n    }\n    if (component.state.newStart) return\n    let temp = component.state.alternative\n    temp.push(x)\n    component.setState({ alternative: temp })\n  }\n}\n","export const CONF = {\n  DEFAULT_START_SIZE: 10,\n  DEFAULT_SPEED: 1,\n  BREAK_POINT_FULL_HD_SCREEN: \"1920px\",\n  BREAK_POINT_SMALL_SCREEN: \"880px\",\n  MAX_ARRAY_SIZE: 100,\n  MIN_ARRAY_SIZE: 4,\n  MAX_SPEED: 350,\n  MIN_SPEED: 1,\n  DEFAULT_ALGORTHIM: \"Insertion Sort\"\n}\n","import React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport { Slider, Button, Typography, Select } from \"antd\"\nimport \"antd/dist/antd.css\"\nimport { CONF } from \"../Contstants/Conf\"\n\nconst Container = styled.div`\n  vertical-align: middle;\n  display: flex;\n  align-items: center;\n  background-color: #1b2a41;\n`\n\nconst CenterFlexBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  flex-grow: 1;\n  @media (max-width: ${CONF.BREAK_POINT_SMALL_SCREEN}) {\n    display: grid;\n  }\n`\nconst StyledButton = styled(Button)`\n  margin: 10px 5%;\n  width: 40%;\n  @media (max-width: ${CONF.BREAK_POINT_SMALL_SCREEN}) {\n    width: 100%;\n  }\n`\n\nconst Left = styled(CenterFlexBox)`\n  align-self: flex-start;\n  padding-left: 10px;\n`\nconst Center = styled(CenterFlexBox)`\n  align-self: center;\n  flex-grow: 3;\n  @media (max-width: ${CONF.BREAK_POINT_SMALL_SCREEN}) {\n    display: contents;\n  }\n`\n\nconst Right = styled(CenterFlexBox)`\n  align-self: flex-end;\n  padding-right: 10px;\n`\nconst StyledSlider = styled(Slider)`\n  width: 100%;\n  display: inline-block;\n  min-width: 50px;\n`\nconst Label = styled(Typography.Text)`\n  color: white !important;\n  margin-left: 6px;\n  display: inline-block;\n`\n\nconst Title = styled(Typography.Title)`\n  color: white !important;\n  display: inline-block;\n  font-size: 2vw !important;\n  text-align: center;\n  @media (max-width: ${CONF.BREAK_POINT_SMALL_SCREEN}) {\n    display: none;\n  }\n  @media (min-width: ${CONF.BREAK_POINT_FULL_HD_SCREEN}) {\n    font-size: 40px !important;\n  }\n  margin: 0 5px !important;\n`\nconst StyledSelector = styled(Select)`\n  width: 50%;\n  margin: 10px 5% !important;\n\n  @media (max-width: ${CONF.BREAK_POINT_SMALL_SCREEN}) {\n    width: 100%;\n  }\n`\nconst SliderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 35%;\n  align-items: center;\n`\nexport default class NavBar extends Component {\n  render() {\n    return (\n      <Container>\n        <Left>\n          <StyledButton onClick={this.props.onClickSort} type=\"primary\">\n            Sort\n          </StyledButton>\n          <StyledButton onClick={this.props.onClickResetart} type=\"secondary\">\n            Resetart\n          </StyledButton>\n        </Left>\n        <Center>\n          <SliderContainer>\n            <Label>Size</Label>\n            <StyledSlider\n              tooltipPlacement={\"right\"}\n              defaultValue={CONF.DEFAULT_START_SIZE}\n              onAfterChange={this.props.onChangeSize}\n              max={CONF.MAX_ARRAY_SIZE}\n              min={CONF.MIN_ARRAY_SIZE}\n            />\n          </SliderContainer>\n          <Title>Sorting Visualizer</Title>\n          <SliderContainer>\n            <Label>Speed</Label>\n            <StyledSlider\n              tooltipPlacement={\"right\"}\n              defaultValue={CONF.DEFAULT_SPEED}\n              onAfterChange={this.props.onChangeSpeed}\n              tipFormatter={value => value + \"x\"}\n              tool\n              max={CONF.MAX_SPEED}\n              min={CONF.MIN_SPEED}\n            />\n          </SliderContainer>\n        </Center>\n        <Right>\n          <StyledSelector\n            disabled={this.props.inProgress}\n            onChange={this.props.onSelectAlgorthim}\n            styled={{ width: \"100%\" }}\n            defaultValue={CONF.DEFAULT_ALGORTHIM}\n          >\n            <Select.Option value=\"Selection Sort\">Selection Sort</Select.Option>\n            <Select.Option value=\"Bubble Sort\">Bubble Sort</Select.Option>\n            <Select.Option value=\"Insertion Sort\">Insertion Sort</Select.Option>\n          </StyledSelector>\n          <StyledButton onClick={this.props.onClickNewArray} type=\"secondary\">\n            New Array\n          </StyledButton>\n        </Right>\n      </Container>\n    )\n  }\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Typography, Button } from \"antd\"\n\nconst Container = styled.div`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  height: 150px;\n  background-color: #1b2a41;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n`\nconst CenterContainer = styled.div`\n  display: inline-grid;\n  justify-items: center;\n`\nconst StyledText = styled(Typography.Text)`\n  color: white !important;\n`\nconst StyledButton = styled(Button)`\n  display: block;\n  border: 0 !important;\n`\nexport default function Footer() {\n  return (\n    <Container>\n      <CenterContainer>\n        <StyledText>Made By Mark Armanious © 2019</StyledText>\n        <StyledButton\n          href={\"https://github.com/markarmanus/Sorting-Visualizer\"}\n          target={\"_blank\"}\n          shape={\"circle\"}\n          ghost={true}\n          icon={\"github\"}\n        ></StyledButton>\n      </CenterContainer>\n    </Container>\n  )\n}\n","import React from \"react\"\nimport Visualizer from \"./Visualizer\"\nimport styled from \"styled-components\"\nimport { generateArray, waitFor } from \"../HelperFunctions\"\nimport { BuubleSort, SelectionSort, InsertionSort } from \"../SearchAlgorthims\"\nimport NavBar from \"./NavBar\"\nimport { CONF } from \"../Contstants/Conf\"\nimport Footer from \"./Footer\"\nconst PageContainer = styled.div`\n  width: 100%;\n  height: 94.5%;\n  flex-flow: column;\n  position: absolute;\n  background-color: #dad2d8;\n`\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    const values = generateArray(CONF.DEFAULT_START_SIZE)\n    this.state = {\n      values: values,\n      originalValues: values.slice(),\n      comparing: [],\n      alternative: [],\n      size: CONF.DEFAULT_START_SIZE,\n      inFinalPosition: [],\n      pivot: [],\n      doneSotring: false,\n      inProgress: false,\n      switching: [],\n      speed: CONF.MAX_SPEED - CONF.DEFAULT_SPEED,\n      newStart: true,\n      selectedAlgorthim: CONF.DEFAULT_ALGORTHIM\n    }\n    this.startSearch = this.startSearch.bind(this)\n    this.onClickSort = this.onClickSort.bind(this)\n    this.resetValues = this.resetValues.bind(this)\n    this.onChangeSize = this.onChangeSize.bind(this)\n    this.onChangeSpeed = this.onChangeSpeed.bind(this)\n    this.onClickResetart = this.onClickResetart.bind(this)\n    this.onClickNewArray = this.onClickNewArray.bind(this)\n    this.onSelectAlgorthim = this.onSelectAlgorthim.bind(this)\n  }\n\n  async onClickSort() {\n    if (this.state.inProgress) return\n    if (this.state.doneSotring) this.onClickResetart()\n    this.setState(\n      {\n        newStart: false,\n        doneSotring: false,\n        inProgress: true\n      },\n      () => this.startSearch()\n    )\n  }\n  async startSearch() {\n    switch (this.state.selectedAlgorthim) {\n      case \"Bubble Sort\":\n        await BuubleSort(this)\n        break\n      case \"Selection Sort\":\n        await SelectionSort(this)\n        break\n      case \"Insertion Sort\":\n        await InsertionSort(this)\n        break\n      default:\n        break\n    }\n    // to fix a bug where restart finished before this runs.\n    if (!this.state.newStart) {\n      this.setState({\n        doneSotring: true,\n        inProgress: false,\n        comparing: [],\n        switching: [],\n        pivot: [],\n        alternative: []\n      })\n    }\n  }\n\n  resetValues(setValuesTo) {\n    this.setState({\n      newStart: true,\n      comparing: [],\n      values: setValuesTo,\n      originalValues: setValuesTo.slice(),\n      switching: [],\n      pivot: [],\n      inProgress: false,\n      inFinalPosition: [],\n      alternative: [],\n      doneSotring: false\n    })\n  }\n\n  async onClickResetart() {\n    this.setState({ newStart: true })\n    await waitFor(100)\n    this.resetValues(this.state.originalValues)\n  }\n\n  onSelectAlgorthim(algorthim) {\n    this.setState({\n      selectedAlgorthim: algorthim\n    })\n  }\n\n  onChangeSpeed(speed) {\n    this.setState({\n      speed: CONF.MAX_SPEED - speed\n    })\n  }\n\n  onChangeSize(size) {\n    let newArray = generateArray(size)\n    this.resetValues(newArray)\n    this.setState({ size: size })\n  }\n\n  onClickNewArray() {\n    this.resetValues(generateArray(this.state.size))\n  }\n  render() {\n    return (\n      <div>\n        <NavBar\n          onChangeSize={this.onChangeSize}\n          onChangeSpeed={this.onChangeSpeed}\n          onClickSort={this.onClickSort}\n          onClickNewArray={this.onClickNewArray}\n          onClickResetart={this.onClickResetart}\n          onSelectAlgorthim={this.onSelectAlgorthim}\n          inProgress={this.state.inProgress}\n        ></NavBar>\n        <PageContainer>\n          <Visualizer\n            comparing={this.state.comparing}\n            switching={this.state.switching}\n            newStart={this.state.newStart}\n            done={this.state.doneSotring}\n            pivot={this.state.pivot}\n            alternative={this.state.alternative}\n            inFinalPosition={this.state.inFinalPosition}\n            values={this.state.values}\n          ></Visualizer>\n          <Footer />\n        </PageContainer>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./Components/App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}